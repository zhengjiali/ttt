<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="8" passed="7">
  <reporter-output>
  </reporter-output>
  <suite name="Suite1" duration-ms="4567" started-at="2017-09-08T01:46:45Z" finished-at="2017-09-08T01:46:49Z">
    <groups>
      <group name="music">
        <method signature="q.group3Test()[pri:0, instance:com.ttt.tt.q@d7b1517]" name="group3Test" class="com.ttt.tt.q"/>
      </group> <!-- music -->
      <group name="movie">
        <method signature="q.group2Test()[pri:0, instance:com.ttt.tt.q@d7b1517]" name="group2Test" class="com.ttt.tt.q"/>
      </group> <!-- movie -->
      <group name="book">
        <method signature="q.group1Test()[pri:0, instance:com.ttt.tt.q@d7b1517]" name="group1Test" class="com.ttt.tt.q"/>
      </group> <!-- book -->
    </groups>
    <test name="First_TESTNG" duration-ms="4567" started-at="2017-09-08T01:46:45Z" finished-at="2017-09-08T01:46:49Z">
      <class name="com.ttt.tt.q">
        <test-method status="PASS" signature="beforeAllTest()[pri:0, instance:com.ttt.tt.q@d7b1517]" name="beforeAllTest" is-config="true" duration-ms="757" started-at="2017-09-08T09:46:45Z" finished-at="2017-09-08T09:46:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeAllTest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.ttt.tt.q@d7b1517]" name="setUp" is-config="true" duration-ms="1" started-at="2017-09-08T09:46:46Z" finished-at="2017-09-08T09:46:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="group1Test()[pri:0, instance:com.ttt.tt.q@d7b1517]" name="group1Test" duration-ms="2465" started-at="2017-09-08T09:46:46Z" finished-at="2017-09-08T09:46:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- group1Test -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.ttt.tt.q@d7b1517]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-09-08T09:46:48Z" finished-at="2017-09-08T09:46:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="group2Test()[pri:0, instance:com.ttt.tt.q@d7b1517]" name="group2Test" duration-ms="1160" started-at="2017-09-08T09:46:48Z" finished-at="2017-09-08T09:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- group2Test -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.ttt.tt.q@d7b1517]" name="setUp" is-config="true" duration-ms="0" started-at="2017-09-08T09:46:48Z" finished-at="2017-09-08T09:46:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="group3Test()[pri:0, instance:com.ttt.tt.q@d7b1517]" name="group3Test" duration-ms="158" started-at="2017-09-08T09:46:49Z" finished-at="2017-09-08T09:46:49Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path title doesn't match.
Expected: 演员
  Actual: 绅士
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path title doesn't match.
Expected: 演员
  Actual: 绅士

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:60)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:235)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:470)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:632)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:264)
	at io.restassured.specification.ResponseSpecification$content$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:247)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:268)
	at com.ttt.tt.q.group3Test(q.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- group3Test -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.ttt.tt.q@d7b1517]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-09-08T09:46:49Z" finished-at="2017-09-08T09:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.ttt.tt.q@d7b1517]" name="setUp" is-config="true" duration-ms="0" started-at="2017-09-08T09:46:49Z" finished-at="2017-09-08T09:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.ttt.tt.q@d7b1517]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-09-08T09:46:49Z" finished-at="2017-09-08T09:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.ttt.tt.q@d7b1517]" name="setUp" is-config="true" duration-ms="0" started-at="2017-09-08T09:46:49Z" finished-at="2017-09-08T09:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testIsBetween(int, int, int, boolean)[pri:0, instance:com.ttt.tt.q@d7b1517]" name="testIsBetween" duration-ms="4" started-at="2017-09-08T09:46:49Z" data-provider="range-provider" finished-at="2017-09-08T09:46:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsBetween -->
        <test-method status="PASS" signature="testIsBetween(int, int, int, boolean)[pri:0, instance:com.ttt.tt.q@d7b1517]" name="testIsBetween" duration-ms="1" started-at="2017-09-08T09:46:49Z" data-provider="range-provider" finished-at="2017-09-08T09:46:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsBetween -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.ttt.tt.q@d7b1517]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-09-08T09:46:49Z" finished-at="2017-09-08T09:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.ttt.tt.q@d7b1517]" name="setUp" is-config="true" duration-ms="0" started-at="2017-09-08T09:46:49Z" finished-at="2017-09-08T09:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.ttt.tt.q@d7b1517]" name="setUp" is-config="true" duration-ms="0" started-at="2017-09-08T09:46:49Z" finished-at="2017-09-08T09:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testIsBetween(int, int, int, boolean)[pri:0, instance:com.ttt.tt.q@d7b1517]" name="testIsBetween" duration-ms="0" started-at="2017-09-08T09:46:49Z" data-provider="range-provider" finished-at="2017-09-08T09:46:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsBetween -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.ttt.tt.q@d7b1517]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-09-08T09:46:49Z" finished-at="2017-09-08T09:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.ttt.tt.q@d7b1517]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-09-08T09:46:49Z" finished-at="2017-09-08T09:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.ttt.tt.q@d7b1517]" name="setUp" is-config="true" duration-ms="0" started-at="2017-09-08T09:46:49Z" finished-at="2017-09-08T09:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testIsBetween(int, int, int, boolean)[pri:0, instance:com.ttt.tt.q@d7b1517]" name="testIsBetween" duration-ms="2" started-at="2017-09-08T09:46:49Z" data-provider="range-provider" finished-at="2017-09-08T09:46:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsBetween -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.ttt.tt.q@d7b1517]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-09-08T09:46:49Z" finished-at="2017-09-08T09:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="testIsBetween(int, int, int, boolean)[pri:0, instance:com.ttt.tt.q@d7b1517]" name="testIsBetween" duration-ms="1" started-at="2017-09-08T09:46:49Z" data-provider="range-provider" finished-at="2017-09-08T09:46:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsBetween -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.ttt.tt.q@d7b1517]" name="setUp" is-config="true" duration-ms="0" started-at="2017-09-08T09:46:49Z" finished-at="2017-09-08T09:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.ttt.tt.q@d7b1517]" name="tearDown" is-config="true" duration-ms="0" started-at="2017-09-08T09:46:49Z" finished-at="2017-09-08T09:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="afterAllTest()[pri:0, instance:com.ttt.tt.q@d7b1517]" name="afterAllTest" is-config="true" duration-ms="0" started-at="2017-09-08T09:46:49Z" finished-at="2017-09-08T09:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterAllTest -->
      </class> <!-- com.ttt.tt.q -->
    </test> <!-- First_TESTNG -->
  </suite> <!-- Suite1 -->
</testng-results>
